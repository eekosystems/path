"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const l=require("fs"),w=require("path"),m=require("./index-B3p7JFW6.js"),u=require("./main-BC8mo-4E.js"),p=t=>Object.prototype.toString.call(t).slice(8,-1).toLowerCase();function y(t){if(p(t)!=="object")return!1;const e=Object.getPrototypeOf(t);return e==null?!0:(e.constructor&&e.constructor.toString())===Object.toString()}var h=function(t,e,r,i,o){if(i==="m")throw new TypeError("Private method is not writable");if(i==="a"&&!o)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!o:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return i==="a"?o.call(t,r):o?o.value=r:e.set(t,r),r},a=function(t,e,r,i){if(r==="a"&&!i)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!i:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return r==="m"?i:r==="a"?i.call(t):i?i.value:e.get(t)},s,c;const b="The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.";class f{constructor(e){s.set(this,void 0),c.set(this,void 0),h(this,s,e.path,"f"),h(this,c,e.start||0,"f"),this.name=w.basename(a(this,s,"f")),this.size=e.size,this.lastModified=e.lastModified}slice(e,r){return new f({path:a(this,s,"f"),lastModified:this.lastModified,size:r-e,start:e})}async*stream(){const{mtimeMs:e}=await l.promises.stat(a(this,s,"f"));if(e>this.lastModified)throw new m.DOMException(b,"NotReadableError");this.size&&(yield*l.createReadStream(a(this,s,"f"),{start:a(this,c,"f"),end:a(this,c,"f")+this.size-1}))}get[(s=new WeakMap,c=new WeakMap,Symbol.toStringTag)](){return"File"}}function F(t,{mtimeMs:e,size:r},i,o={}){let n;y(i)?[o,n]=[i,void 0]:n=i;const d=new f({path:t,size:r,lastModified:e});return n||(n=d.name),new u.File([d],n,{...o,lastModified:d.lastModified})}async function P(t,e,r){const i=await l.promises.stat(t);return F(t,i,e,r)}exports.isFile=u.isFile;exports.fileFromPath=P;
