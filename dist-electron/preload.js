"use strict";const o=require("electron"),E={STORE_GET:"store:get",STORE_SET:"store:set",SECRETS_GET:"secrets:get",SECRETS_SET:"secrets:set",FILES_OPEN:"files:open",FILES_READ:"files:read",GDRIVE_CONNECT:"gdrive:connect",GDRIVE_FETCH:"gdrive:fetch",DROPBOX_CONNECT:"dropbox:connect",DROPBOX_FETCH:"dropbox:fetch",ONEDRIVE_CONNECT:"onedrive:connect",ONEDRIVE_FETCH:"onedrive:fetch",CLOUD_DISCONNECT:"cloud:disconnect",AI_GENERATE:"ai:generate",EXPORT_LETTER:"export:letter",APP_ERROR:"app-error",AUTH_LOGIN:"auth:login",AUTH_LOGOUT:"auth:logout",AUTH_CHECK:"auth:check",LICENSE_ACTIVATE:"license:activate",LICENSE_DEACTIVATE:"license:deactivate",LICENSE_VALIDATE:"license:validate",LICENSE_INFO:"license:info",LICENSE_CHECK_FEATURE:"license:check-feature",SUPPORT_CHAT:"support:chat",SUPPORT_SEND_EMAIL:"support:send-email"},t=(e,T)=>o.ipcRenderer.invoke(e,T);o.contextBridge.exposeInMainWorld("electronAPI",{getStoreData:e=>t(E.STORE_GET,{key:e}),setStoreData:e=>t(E.STORE_SET,e),getApiKey:e=>t(E.SECRETS_GET,e),setApiKey:(e,T)=>t(E.SECRETS_SET,e),openFileDialog:()=>t(E.FILES_OPEN),readFileContent:e=>t(E.FILES_READ,e),connectGoogleDrive:()=>t(E.GDRIVE_CONNECT),fetchGoogleDriveFiles:()=>t(E.GDRIVE_FETCH),connectDropbox:()=>t(E.DROPBOX_CONNECT),fetchDropboxFiles:()=>t(E.DROPBOX_FETCH),connectOneDrive:()=>t(E.ONEDRIVE_CONNECT),fetchOneDriveFiles:()=>t(E.ONEDRIVE_FETCH),disconnectCloudService:e=>t(E.CLOUD_DISCONNECT,e),generateContent:e=>t(E.AI_GENERATE,e),exportLetter:e=>t(E.EXPORT_LETTER,e),login:e=>t(E.AUTH_LOGIN,e),logout:()=>t(E.AUTH_LOGOUT),checkAuth:()=>t(E.AUTH_CHECK),activateLicense:e=>t(E.LICENSE_ACTIVATE,e),deactivateLicense:()=>t(E.LICENSE_DEACTIVATE),validateLicense:()=>t(E.LICENSE_VALIDATE),getLicenseInfo:()=>t(E.LICENSE_INFO),checkFeature:e=>t(E.LICENSE_CHECK_FEATURE,e),createCheckoutSession:e=>t(E.SUBSCRIPTION_CREATE_CHECKOUT,e),getSubscriptionStatus:e=>t(E.SUBSCRIPTION_GET_STATUS,e),createPortalSession:e=>t(E.SUBSCRIPTION_CREATE_PORTAL,e),sendSupportEmail:e=>t(E.SUPPORT_SEND_EMAIL,e),supportChat:e=>t(E.SUPPORT_CHAT,e),logError:e=>{console.error("Renderer error:",e),o.ipcRenderer.send("log:error",e)},onAppError:e=>{o.ipcRenderer.on(E.APP_ERROR,(T,r)=>e(r))},openExternal:e=>o.ipcRenderer.send("open-external",e)});
